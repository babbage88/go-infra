apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-infra
spec:
  replicas: 3
  selector:
    matchLabels:
      app: go-infra
  template:
    metadata:
      labels:
        app: go-infra
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname # Use the hostname label
                    operator: In
                    values:
                      - taloskube1
                      - taloskube2
                      - taloskube3
                      - taloskube4
                      - taloskube5
      containers:
        - name: go-infra
          #image: git.trahan.dev/jtrahan/goinfra:v1.0.3
          image: ghcr.io/babbage88/go-infra:v1.0.9
          imagePullPolicy: Always
          ports:
            - containerPort: 8993
          command: ["/app/server"]
          volumeMounts:
            - name: cf-token-ini
              mountPath: "/run/secrets/cf_token.ini"
              subPath: cf_token.ini
            - name: k3s-env
              mountPath: "/app/.env"
              subPath: k3s.env
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "256Mi"
              cpu: "250m"
      initContainers:
        - name: infra-db-migrate
          image: ghcr.io/babbage88/init-infradb:v1.0.9
          restartPolicy: Always
          imagePullPolicy: Always
          command: ["/app/migrate"]
          volumeMounts:
            - name: initdb-env
              mountPath: "/app/.env"
              subPath: .env
      volumes:
        - name: cf-token-ini
          secret:
            secretName: cf-token-ini
        - name: k3s-env
          secret:
            secretName: k3s-env
        - name: initdb-env
          secret:
            secretName: initdb.env
      imagePullSecrets:
        - name: ghcr
