{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "go-infra API.",
    "termsOfService": "there are no TOS at this moment, use at your own risk we take no responsibility",
    "contact": {
      "name": "Justin Trahan",
      "email": "test@trahan.dev"
    },
    "license": {
      "name": "N/A"
    },
    "version": "v1.0.7"
  },
  "host": "infra.trahan.dev",
  "paths": {
    "/create/user": {
      "post": {
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "createuser"
        ],
        "summary": "Create a new user.",
        "operationId": "idOfcreateUserEndpoint",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateNewUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/UserDao"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Login a user and return token.",
        "operationId": "idOfloginEndpoint",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserLoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AuthToken"
          }
        }
      }
    },
    "/renew": {
      "post": {
        "description": "Request/Renew ssl certificate via cloudflare letsencrypt. Uses DNS Challenge",
        "produces": [
          "application/json",
          "application/zip"
        ],
        "tags": [
          "renew"
        ],
        "operationId": "idOfrenewEndpoint",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CertDnsRenewReq"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/CertificateData"
          }
        }
      }
    }
  },
  "definitions": {
    "CertDnsRenewReq": {
      "type": "object",
      "properties": {
        "domainName": {
          "type": "string",
          "x-go-name": "DomainName"
        },
        "email": {
          "type": "string",
          "x-go-name": "Email"
        },
        "provider": {
          "type": "string",
          "x-go-name": "Provider"
        },
        "zipFiles": {
          "type": "boolean",
          "x-go-name": "ZipFiles"
        }
      },
      "x-go-package": "github.com/babbage88/go-infra/webutils/cert_renew"
    },
    "CreateNewUserRequest": {
      "type": "object",
      "properties": {
        "newEmail": {
          "type": "string",
          "x-go-name": "NewUserEmail"
        },
        "newPassword": {
          "type": "string",
          "x-go-name": "NewUserPassword"
        },
        "newUserRole": {
          "type": "string",
          "x-go-name": "NewUserRole"
        },
        "newUsername": {
          "type": "string",
          "x-go-name": "NewUsername"
        }
      },
      "x-go-package": "github.com/babbage88/go-infra/webapi/user_api_handlers"
    },
    "UserLoginRequest": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "x-go-name": "Password"
        },
        "username": {
          "type": "string",
          "x-go-name": "UserName"
        }
      },
      "x-go-package": "github.com/babbage88/go-infra/webapi/authapi"
    }
  },
  "responses": {
    "AuthToken": {
      "description": "Respose will return login result and the user info.",
      "headers": {
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "expiration": {
          "type": "string",
          "format": "date-time"
        },
        "last_modified": {
          "type": "string",
          "format": "date-time"
        },
        "token": {
          "type": "string"
        },
        "user_id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CertificateData": {
      "description": "Renew will return CertificateData result and the user info.",
      "headers": {
        "ZipDir": {
          "type": "string"
        },
        "cert_pem": {
          "type": "string"
        },
        "chain_pem": {
          "type": "string"
        },
        "fullchain_and_key": {
          "type": "string"
        },
        "fullchain_pem": {
          "type": "string"
        },
        "priv_key": {
          "type": "string"
        }
      }
    },
    "UserDao": {
      "description": "Respose will return login result and the user info.",
      "headers": {
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "is_deleted": {
          "type": "boolean"
        },
        "last_modified": {
          "type": "string",
          "format": "date-time"
        },
        "role": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}
