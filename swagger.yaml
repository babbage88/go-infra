consumes:
  - application/json
definitions:
    CreateNewUserRequest:
        properties:
            newEmail:
                type: string
                x-go-name: NewUserEmail
            newPassword:
                type: string
                x-go-name: NewUserPassword
            newUserRole:
                type: string
                x-go-name: NewUserRole
            newUsername:
                type: string
                x-go-name: NewUsername
        type: object
        x-go-package: github.com/babbage88/go-infra/webapi/user_api_handlers
    UserLoginRequest:
        properties:
            password:
                type: string
                x-go-name: Password
            username:
                type: string
                x-go-name: UserName
        type: object
        x-go-package: github.com/babbage88/go-infra/webapi/authapi
host: 10.0.0.64:8993
info:
    contact:
        email: test@trahan.dev
        name: Justin Trahan
    license:
        name: N/A
    termsOfService: there are no TOS at this moment, use at your own risk we take no responsibility
    title: go-infra API.
    version: v1.0.7
paths:
    /create/user:
        post:
            operationId: idOfcreateUserEndpoint
            parameters:
              - in: body
                name: body
                schema:
                    $ref: '#/definitions/CreateNewUserRequest'
                x-go-name: Body
            responses:
                "200":
                    $ref: '#/responses/UserDao'
            security:
              - bearer: []
            summary: Create a new user.
            tags:
              - createuser
    /login:
        post:
            operationId: idOfloginEndpoint
            parameters:
              - in: body
                name: body
                schema:
                    $ref: '#/definitions/UserLoginRequest'
                x-go-name: Body
            responses:
                "200":
                    $ref: '#/responses/AuthToken'
            summary: Login a user and return token.
            tags:
              - login
produces:
  - application/json
responses:
    AuthToken:
        description: Respose will return login result and the user info.
        headers:
            created_at:
                format: date-time
                type: string
            expiration:
                format: date-time
                type: string
            last_modified:
                format: date-time
                type: string
            token:
                type: string
            user_id:
                format: int32
                type: integer
    UserDao:
        description: Respose will return login result and the user info.
        headers:
            created_at:
                format: date-time
                type: string
            email:
                type: string
            enabled:
                type: boolean
            is_deleted:
                type: boolean
            last_modified:
                format: date-time
                type: string
            role:
                type: string
            username:
                type: string
schemes:
  - http
  - https
security:
  - bearer: []
securityDefinitions:
    bearer:
        in: header
        name: Authorization
        type: apiKey
swagger: "2.0"
